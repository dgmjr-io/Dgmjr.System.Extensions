<!--
 * Dgmjr.System.Extensions.props
 *
 *   Created: 2023-03-13-05:47:59
 *   Modified: 2023-03-30-03:48:47
 *
 *   Author: David G. Moore, Jr. <david@dgmjr.io>
 *
 *   Copyright Â© 2022 - 2023 David G. Moore, Jr., All Rights Reserved
 *      License: MIT (https://opensource.org/licenses/MIT)
-->

<Project>
  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup Condition="!$(TargetFramework.StartsWith('netstandard1'))">
    <Using Include="System.Xml.Serialization.XmlAnyAttributeAttribute" Alias="XAnyAttributeAttribute"/>
    <Using Include="System.Xml.Serialization.XmlAnyElementAttribute" Alias="XAnyElementAttribute"/>
    <Using Include="System.Xml.Serialization.XmlArrayAttribute" Alias="XArrayAttribute"/>
    <Using Include="System.Xml.Serialization.XmlArrayItemAttribute" Alias="XArrayItem"/>
    <Using Include="System.Xml.Serialization.XmlAttributeAttribute" Alias="XAttributeAttribute"/>
    <Using Include="System.Xml.Serialization.XmlEnumAttribute" Alias="XEnumAttribute"/>
    <Using Include="System.Xml.Serialization.XmlEnumAttribute" Alias="XEnumValueAttribute"/>
    <Using Include="System.Xml.Serialization.XmlIgnoreAttribute" Alias="XIgnoreAttribute"/>
    <Using Include="System.Xml.Serialization.XmlIncludeAttribute" Alias="XIncludeAttribute"/>
    <Using Include="System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" Alias="XNsAttribute"/>
    <Using Include="System.Xml.Serialization.XmlRootAttribute" Alias="XRootAttribute"/>
    <Using Include="System.Xml.Serialization.XmlTextAttribute" Alias="XTextAttribute"/>
    <Using Include="System.Xml.Serialization.XmlTypeAttribute" Alias="XTypeAttribute"/>
    <Using Include="System.Xml.Serialization.XmlElementAttribute" Alias="XElementAttribute"/>
    <Using Include="System.Xml.XPath" Alias="XPathDoc"/>
    <Using Include="System.Text.Encoding" Static="true" />
    <Using Include="System.Text" />
    <Using Include="System.Xml.Linq.XAttribute" Alias="XA"/>
    <Using Include="System.Xml.Linq.XComment" Alias="XC"/>
    <Using Include="System.Xml.Linq.XDocument" Alias="XD"/>
    <Using Include="System.Xml.Linq.XElement" Alias="XE"/>
    <Using Include="System.Xml.Linq.XName" Alias="XN"/>
    <Using Include="System.Xml.Linq.XNamespace" Alias="XNS"/>
    <Using Include="System.Xml.Linq.XNode" Alias="XO"/>
    <Using Include="System.Collections.Generic.CaseInsensitiveKeyDictionary%3cstring%3e" Alias="CaseInsensitiveStringDictionary" />
    <Using Include="System.Collections.Generic.CaseInsensitiveKeyDictionary%3cstring%3e" Alias="CaseInsensitiveStringKeyDictionary" />
  </ItemGroup>
  <ItemGroup Condition="!$(TargetFramework.StartsWith('netstandard'))">
    <PackageReference Include="System.Collections.Immutable"/>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Xml.XPath" Aliases="XPathDoc"/>
    <PackageReference Include="System.Usings"/>
    <PackageReference Include="System.Text.Usings" IncludeAssets="Build" ExcludeAssets="Compile;Runtime;Native;Analyzers"/>
    <PackageReference Include="system.Xml.ReaderWriter" Condition="$(TargetFramework.StartsWith('net6')) Or $(TargetFramework.StartsWith('net7'))"/>
  </ItemGroup>
  <Target Name="PrePack" BeforeTargets="GetPackageContents" Condition="$(TargetFramework.StartsWith('netstandard1'))">
    <ItemGroup>
      <PackageFile Remove="$(OutputPath)**/System.Runtime.Numerics.dll"/>
      <None Remove="$(OutputPath)**/System.Runtime.Numerics.dll"/>
      <Reference Remove="System.Runtime.Numerics"/>
    </ItemGroup>
  </Target>
  <ItemGroup Condition="$(TargetFramework.Contains('netstandard1'))">
    <Compile Remove="./System.ComponentModel/**/*.cs"/>
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.Contains('netstandard')) Or '$(TargetFramework)' == 'net5.0'">
    <Compile Remove="./System.Text.Json/*.cs"/>
  </ItemGroup>
  <Target Name="RemoveXDocument" BeforeTargets="CoreCompile">
    <!-- <ItemGroup>
            <PackageReference Remove="System.Xml.XDocument" />
            <Reference Include="System.Xml.XDocument" Condition="$(TargetFramework.Contains('netstandard1'))" Aliases="XDoc" />
        </ItemGroup> -->
  </Target>
</Project>
